// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Recrovit.RecroGridFramework.Identity;

namespace Recrovit.RecroGridFramework.Identity.Migrations.PostgreSQL
{
    [DbContext(typeof(IdentityDbContextBaseMigrPostgreSQL))]
    [Migration("20201124000001_rgf_identity_v1_0")]
    partial class rgf_identity_v1_0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Recrovit.RecroGridFramework.Identity.Models.RGFRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnName("roleid")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("rolename")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RoleScope")
                        .HasColumnName("rolescope")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Source")
                        .HasColumnName("source")
                        .HasColumnType("character varying(16)")
                        .HasMaxLength(16);

                    b.HasKey("RoleId")
                        .HasName("pk_rgf_identityrole");

                    b.ToTable("rgf_identityrole");

                    b.HasData(
                        new
                        {
                            RoleId = "1",
                            RoleName = "Administrators",
                            Source = "RGF"
                        },
                        new
                        {
                            RoleId = "2",
                            RoleName = "Users",
                            Source = "RGF"
                        });
                });

            modelBuilder.Entity("Recrovit.RecroGridFramework.Identity.Models.RGFUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Language")
                        .HasColumnName("language")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserId")
                        .HasName("pk_rgf_identityuser");

                    b.ToTable("rgf_identityuser");
                });

            modelBuilder.Entity("Recrovit.RecroGridFramework.Identity.Models.RGFUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RoleId")
                        .HasColumnName("roleid")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_rgf_identityuserrole");

                    b.HasIndex("RoleId")
                        .HasName("ix_rgf_identityuserrole_roleid");

                    b.ToTable("rgf_identityuserrole");
                });

            modelBuilder.Entity("Recrovit.RecroGridFramework.Identity.Models.RGFUserRole", b =>
                {
                    b.HasOne("Recrovit.RecroGridFramework.Identity.Models.RGFRole", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_rgf_identityuserrole_rgf_identityrole_roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recrovit.RecroGridFramework.Identity.Models.RGFUser", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_rgf_identityuserrole_rgf_identityuser_userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
